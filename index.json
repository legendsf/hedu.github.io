[{"categories":null,"content":"1 ## 2 ​ staff ### 3 ​ staff 4 结构归纳法（Structural induction）（这种是我最近准备在看的）用来证明递归形式(自己调用自己)的算法的正确性； https://www.jianshu.com/p/29f38abdebb3 循环不变量（loop invariant）用来证明迭代算法（如：for，while循环）的正确性，就是数学归纳法。《算法导论》第三版书中有很多例子，从第二章开始引入。 如果 i-1 时成立，那么i时成立，就满足循环不变 https://www.jianshu.com/p/baa4d48f8560 作者：两天 链接：https://www.zhihu.com/question/39265570/answer/2255377065 来源：知乎 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 awk 学习笔记： https://www.gnu.org/software/gawk/manual/gawk.html ","date":"0001-01-01","objectID":"/12/:0:0","tags":null,"title":"","uri":"/12/"},{"categories":null,"content":" 这是一个一级标题 ============================ 这是一个二级标题 -------------------------------------------------- ### 这是一个三级标题 这是一个一级标题 ","date":"0001-01-01","objectID":"/13/:0:0","tags":null,"title":"","uri":"/13/"},{"categories":null,"content":"这是一个二级标题 ","date":"0001-01-01","objectID":"/13/:1:0","tags":null,"title":"","uri":"/13/"},{"categories":null,"content":"这是一个三级标题 sf $$ x^2 $$ $$ \\sum_{n=1}^{100}{a_n} $$ $$ c(u)=\\begin{cases} \\sqrt\\frac{1}{N}，u=0\\ \\sqrt\\frac{2}{N}， u\\neq0\\end{cases} $$ ","date":"0001-01-01","objectID":"/13/:1:1","tags":null,"title":"","uri":"/13/"},{"categories":null,"content":"添加全局cdn变量 对于一些静态资源，比如图片、音乐文件、第三方库等，如果有自己的cdn或者图床等，可以在站点配置文件自定义一个cdn变量，如下： [params] # cdn变量，末尾不需要加/ cdnPrefix = \"http://xxxx\" 接下来就可以在你需要的地方使用该变量，大概有如下3种用法。 ","date":"0001-01-01","objectID":"/14/:1:0","tags":null,"title":"","uri":"/14/"},{"categories":null,"content":"在md文件中使用 在md文件中可以用内置的shortcodes来使用该变量： {{\u003c param cdnPrefix \u003e}} ![avatar.jpg]({{\u003c param cdnPrefix \u003e}}/images/avatar.jpg) ","date":"0001-01-01","objectID":"/14/:1:1","tags":null,"title":"","uri":"/14/"},{"categories":null,"content":"在模板文件中使用 在layouts目录下有很多html文件，这些是用来渲染站点的模板文件，可以用Hugo的语法来引入该变量： {{ .Site.Params.cdnPrefix }} 如果在一个模板文件里有多个地方使用到该变量，可以定义一个局部变量来使用： {{- $cdn := .Site.Params.cdnPrefix -}} /* 使用局部变量 */ {{ $cdn }} 测试 ```ajflafj ``` Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"0001-01-01","objectID":"/14/:1:2","tags":null,"title":"","uri":"/14/"}]